"""
Django settings for FrontProject project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*&dtbkvi_&yy0t+x=s1!8_6a%e^&qfrv$#txe-(*oc^j^0&h(d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django_inlinecss',                     # библиотека для использования css в электронных письмах
    'FrontProject',
    'frontend',                             # работа с Front-end
    'jinja_app',                            # работа с Jinja2
    'send_email',                           # отправка электронных писем
    'reset_password_app',                   # сброс пароля
    'graph_app',                            # пример приложения с GraphQL
    # 'graphene_django',
]

# GRAPHENE = {
#     "SCHEMA": 'graph_app.schema.schema',
#
#     # "MIDDLEWARE": [
#     #     "graphql_jwt.middleware.JSONWebTokenMiddleware"
#     # ]
# }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'FrontProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'FrontProject/templates/main']
        # 'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [BASE_DIR / 'jinja_app/templates'],
    #     'APP_DIRS': True,
    #     'OPTIONS': {
    #         'environment': 'jinja_app.jinja2.environment'
    #     },

        # для создания собственного backend-а под шаблон
        # 'BACKEND': 'jinja_app.my_backend.MyBackend',
        # 'DIRS': [os.path.join(BASE_DIR, 'jinja_app/templates')],
    }
]

WSGI_APPLICATION = 'FrontProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/', 'img')
MEDIA_URL = '/test-email/images/'

# для отправки e-mail
# в тестовом режиме - отправляем на консоль
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# GMAIL CONFIG
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'               # адрес хоста для отправки email
EMAIL_PORT = 587                            # порт хоста
EMAIL_HOST_USER = ''                        # логин пользователя хоста
EMAIL_HOST_PASSWORD = ''                    # пароль пользователя хоста
EMAIL_USE_TLS = True                        # использовать защищенное соединение
DEFAULT_FROM_EMAIL = 'default from email'   # отправлять письма по умолчанию на данную почту

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
